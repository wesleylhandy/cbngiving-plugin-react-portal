{"version":3,"sources":["Components/StyleOptionsTabs.js"],"names":["StyleOptionsTabs","props","options","adminMode","viewMode","styleMode","setStyleMode","cssConfig","storeConfig","currentForm","enabled","toggleBtnEnable","handleStyleButtonClick","handleStyleInputChange","styleSettings","subHeads","form_status","push","tabs","map","th","ind"],"mappings":";AAsEC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtED,IAAA,EAAA,EAAA,QAAA,UAEA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,kBAEA,EAAA,EAAA,QAAA,sBAgEC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9Dc,SAASA,EAAiBC,GAEjCC,IAAAA,EAaAD,EAbAC,QACAC,EAYAF,EAZAE,UACAC,EAWAH,EAXAG,SACAC,EAUAJ,EAVAI,UACAC,EASAL,EATAK,aACAC,EAQAN,EARAM,UACAC,EAOAP,EAPAO,YACAC,EAMAR,EANAQ,YACAC,EAKAT,EALAS,QACAC,EAIAV,EAJAU,gBACAC,EAGAX,EAHAW,uBACAC,EAEAZ,EAFAY,uBACAC,EACAb,EADAa,cAEEC,EAAW,CAAC,SAAU,QAAS,WACL,QAA5BN,EAAYO,aACZD,EAASE,KAAK,WAEZC,IAAAA,EAAOH,EAASI,IAAI,SAACC,EAAIC,GAEvB,OAAA,EAAC,QAAA,cAAA,EAAD,QAAA,CACI,QAASX,EACT,QAASU,EACT,YAAad,EACb,KAAMD,EACN,IAAWgB,MAAAA,OAAAA,GACX,gBAAiBV,MAMzB,OAAA,EAAC,QAAA,cAAA,EAAD,QAAO,SAECR,KAAc,SAAdA,GAAsC,QAAdA,GAAoC,UAAbC,EAC3C,EAAC,QAAA,cAAA,EAAD,QAAO,SACH,KAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,yCACVc,GAGa,YAAdb,EACI,EAAC,QAAA,cAAA,EAAD,QAAA,CACI,YAAaI,EACb,UAAWN,EACX,YAAaE,EACb,aAAc,CAACG,YAAAA,EAAaG,gBAAAA,EAAiBC,uBAAAA,EAAwBC,uBAAAA,GACrE,QAAS,CAACN,UAAAA,GACV,cAAeO,IAES,QAA5BL,EAAYO,YACZ,EAAC,QAAA,cAAA,EAAD,QAAA,CAAa,YAAaP,EAAa,QAASP,IAChD,MAIZ,MAKnB,OAAA,KAAA,OAAA,IAAA,OAAA,oBAAA,WAAA,QAAA","file":"StyleOptionsTabs.bfbf5427.map","sourceRoot":"../../../src","sourcesContent":["import React from 'react'\n\nimport TabHead from './TabHead'\nimport TabBody from './TabBody'\nimport FormPreview from './FormPreview'\n\nimport tabs from './styles/tabs.css'\n\nexport default function StyleOptionsTabs(props) {\n    const { \n        options,\n        adminMode, \n        viewMode, \n        styleMode, \n        setStyleMode, \n        cssConfig, \n        storeConfig, \n        currentForm, \n        enabled, \n        toggleBtnEnable, \n        handleStyleButtonClick, \n        handleStyleInputChange, \n        styleSettings\n    } = props\n    const subHeads = [\"Colors\", \"Fonts\", \"Spacing\"]\n    if (currentForm.form_status !== \"new\") {\n        subHeads.push(\"Preview\")\n    }\n    const tabs = subHeads.map((th, ind)=>{\n        return (\n            <TabHead\n                enabled={enabled}\n                content={th}\n                handleClick={setStyleMode}\n                mode={styleMode}\n                key={`sh-${ind}`}\n                toggleBtnEnable={toggleBtnEnable}\n            />\n        )\n    })\n\n    return (\n        <React.Fragment>\n            { \n                adminMode !== \"List\" && adminMode !== \"Add\" && viewMode === \"Style\" ? (\n                    <React.Fragment>\n                        <div styleName=\"tabs.tab-headers__submenu--tertiary\">\n                            {tabs}\n                        </div>\n                        {\n                            styleMode !== \"Preview\" ? (\n                                <TabBody \n                                    currentForm={currentForm} \n                                    adminMode={adminMode} \n                                    displayMode={styleMode} \n                                    tabFunctions={{storeConfig, toggleBtnEnable, handleStyleButtonClick, handleStyleInputChange}} \n                                    tabData={{cssConfig}}\n                                    styleSettings={styleSettings}\n                                />\n                            ) : currentForm.form_status !== \"new\" ? (\n                                <FormPreview currentForm={currentForm} options={options}/>\n                            ) : null\n                        }\n                    </React.Fragment>\n                ) : (\n                    null\n                )\n            }\n        </React.Fragment>\n    )\n}"]}