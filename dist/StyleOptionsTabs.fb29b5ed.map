{"version":3,"sources":["src/Components/StyleOptionsTabs.js"],"names":["StyleOptionsTabs","props","options","adminMode","viewMode","styleMode","setStyleMode","cssConfig","storeConfig","currentForm","enabled","toggleBtnEnable","handleStyleButtonClick","handleStyleInputChange","styleSettings","subHeads","form_status","push","tabs","map","th","ind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAEe,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,MAExCC,OAFwC,GAexCD,KAfwC,CAExCC,OAFwC;AAAA,MAGxCC,SAHwC,GAexCF,KAfwC,CAGxCE,SAHwC;AAAA,MAIxCC,QAJwC,GAexCH,KAfwC,CAIxCG,QAJwC;AAAA,MAKxCC,SALwC,GAexCJ,KAfwC,CAKxCI,SALwC;AAAA,MAMxCC,YANwC,GAexCL,KAfwC,CAMxCK,YANwC;AAAA,MAOxCC,SAPwC,GAexCN,KAfwC,CAOxCM,SAPwC;AAAA,MAQxCC,WARwC,GAexCP,KAfwC,CAQxCO,WARwC;AAAA,MASxCC,WATwC,GAexCR,KAfwC,CASxCQ,WATwC;AAAA,MAUxCC,OAVwC,GAexCT,KAfwC,CAUxCS,OAVwC;AAAA,MAWxCC,eAXwC,GAexCV,KAfwC,CAWxCU,eAXwC;AAAA,MAYxCC,sBAZwC,GAexCX,KAfwC,CAYxCW,sBAZwC;AAAA,MAaxCC,sBAbwC,GAexCZ,KAfwC,CAaxCY,sBAbwC;AAAA,MAcxCC,aAdwC,GAexCb,KAfwC,CAcxCa,aAdwC;AAgB5C,MAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CAAjB;;AACA,MAAIN,WAAW,CAACO,WAAZ,KAA4B,KAAhC,EAAuC;AACnCD,IAAAA,QAAQ,CAACE,IAAT,CAAc,SAAd;AACH;;AACD,MAAMC,IAAI,GAAGH,QAAQ,CAACI,GAAT,CAAa,UAACC,EAAD,EAAKC,GAAL,EAAW;AACjC,WACI,6BAAC,gBAAD;AACI,MAAA,OAAO,EAAEX,OADb;AAEI,MAAA,OAAO,EAAEU,EAFb;AAGI,MAAA,WAAW,EAAEd,YAHjB;AAII,MAAA,IAAI,EAAED,SAJV;AAKI,MAAA,GAAG,eAAQgB,GAAR,CALP;AAMI,MAAA,eAAe,EAAEV;AANrB,MADJ;AAUH,GAXY,CAAb;AAaA,SACI,6BAAC,cAAD,CAAO,QAAP,QAEQR,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,KAAtC,IAA+CC,QAAQ,KAAK,OAA5D,GACI,6BAAC,cAAD,CAAO,QAAP,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKc,IADL,CADJ,EAKQb,SAAS,KAAK,SAAd,GACI,6BAAC,gBAAD;AACI,IAAA,WAAW,EAAEI,WADjB;AAEI,IAAA,SAAS,EAAEN,SAFf;AAGI,IAAA,WAAW,EAAEE,SAHjB;AAII,IAAA,YAAY,EAAE;AAACG,MAAAA,WAAW,EAAXA,WAAD;AAAcG,MAAAA,eAAe,EAAfA,eAAd;AAA+BC,MAAAA,sBAAsB,EAAtBA,sBAA/B;AAAuDC,MAAAA,sBAAsB,EAAtBA;AAAvD,KAJlB;AAKI,IAAA,OAAO,EAAE;AAACN,MAAAA,SAAS,EAATA;AAAD,KALb;AAMI,IAAA,aAAa,EAAEO;AANnB,IADJ,GASIL,WAAW,CAACO,WAAZ,KAA4B,KAA5B,GACA,6BAAC,oBAAD;AAAa,IAAA,WAAW,EAAEP,WAA1B;AAAuC,IAAA,OAAO,EAAEP;AAAhD,IADA,GAEA,IAhBZ,CADJ,GAqBI,IAvBZ,CADJ;AA6BH;;;;;;;;;;;;;0BA9DuBF","file":"StyleOptionsTabs.fb29b5ed.map","sourceRoot":"..","sourcesContent":["import React from 'react'\n\nimport TabHead from './TabHead'\nimport TabBody from './TabBody'\nimport FormPreview from './FormPreview'\n\nimport tabs from './styles/tabs.css'\n\nexport default function StyleOptionsTabs(props) {\n    const { \n        options,\n        adminMode, \n        viewMode, \n        styleMode, \n        setStyleMode, \n        cssConfig, \n        storeConfig, \n        currentForm, \n        enabled, \n        toggleBtnEnable, \n        handleStyleButtonClick, \n        handleStyleInputChange, \n        styleSettings\n    } = props\n    const subHeads = [\"Colors\", \"Fonts\", \"Spacing\"]\n    if (currentForm.form_status !== \"new\") {\n        subHeads.push(\"Preview\")\n    }\n    const tabs = subHeads.map((th, ind)=>{\n        return (\n            <TabHead\n                enabled={enabled}\n                content={th}\n                handleClick={setStyleMode}\n                mode={styleMode}\n                key={`sh-${ind}`}\n                toggleBtnEnable={toggleBtnEnable}\n            />\n        )\n    })\n\n    return (\n        <React.Fragment>\n            { \n                adminMode !== \"List\" && adminMode !== \"Add\" && viewMode === \"Style\" ? (\n                    <React.Fragment>\n                        <div styleName=\"tabs.tab-headers__submenu--tertiary\">\n                            {tabs}\n                        </div>\n                        {\n                            styleMode !== \"Preview\" ? (\n                                <TabBody \n                                    currentForm={currentForm} \n                                    adminMode={adminMode} \n                                    displayMode={styleMode} \n                                    tabFunctions={{storeConfig, toggleBtnEnable, handleStyleButtonClick, handleStyleInputChange}} \n                                    tabData={{cssConfig}}\n                                    styleSettings={styleSettings}\n                                />\n                            ) : currentForm.form_status !== \"new\" ? (\n                                <FormPreview currentForm={currentForm} options={options}/>\n                            ) : null\n                        }\n                    </React.Fragment>\n                ) : (\n                    null\n                )\n            }\n        </React.Fragment>\n    )\n}"]}